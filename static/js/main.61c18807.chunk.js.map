{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["checkLine","a","b","c","d","Hole","props","className","value","Slat","onClick","handleClick","Array","holes","length","map","x","j","Board","state","boardState","fill","playerTurn","gameMode","gameSelected","winner","mode","this","setState","slatID","console","log","boardCopy","arr","slice","indexOf","newSlat","reverse","makeMove","bs","r","checkWinner","winnerMessageStyle","slats","i","selectedGame","Component","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61c18807.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction checkLine(a, b, c, d) {\n  return a !== null && a === b && a === c && a === d;\n}\n\nfunction checkWinner(bs) {\n  for (let c = 0; c < 7; c++)\n    for (let r = 0; r < 4; r++)\n      if (checkLine(bs[c][r], bs[c][r + 1], bs[c][r + 2], bs[c][r + 3]))\n        return bs[c][r] + ' wins!';\n\n  for (let r = 0; r < 6; r++)\n    for (let c = 0; c < 4; c++)\n      if (checkLine(bs[c][r], bs[c + 1][r], bs[c + 2][r], bs[c + 3][r]))\n        return bs[c][r] + ' wins!';\n\n  for (let r = 0; r < 3; r++)\n    for (let c = 0; c < 4; c++)\n      if (\n        checkLine(\n          bs[c][r],\n          bs[c + 1][r + 1],\n          bs[c + 2][r + 2],\n          bs[c + 3][r + 3]\n        )\n      )\n        return bs[c][r] + ' wins!';\n\n  for (let r = 0; r < 4; r++)\n    for (let c = 3; c < 6; c++)\n      if (\n        checkLine(\n          bs[c][r],\n          bs[c - 1][r + 1],\n          bs[c - 2][r + 2],\n          bs[c - 3][r + 3]\n        )\n      )\n        return bs[c][r] + ' wins!';\n\n  return '';\n}\n\nfunction Hole(props) {\n  // console.log('Hole', props);\n  return (\n    <div className=\"Hole\">\n      <div className={props.value}></div>\n    </div>\n  );\n}\n\nfunction Slat(props) {\n  // console.log('Slat', props);\n  return (\n    <div className=\"Slat\" onClick={() => props.handleClick()}>\n      {[...Array(props.holes.length)].map((x, j) => (\n        <Hole key={j} value={props.holes[j]}></Hole>\n      ))}\n    </div>\n  );\n}\n\nclass Board extends Component {\n  constructor() {\n    super();\n    this.state = {\n      boardState: new Array(7).fill(new Array(6).fill(null)),\n      playerTurn: 'Red',\n      gameMode: '',\n      gameSelected: false,\n      winner: '',\n    };\n  }\n\n  selectedGame(mode) {\n    this.setState({\n      gameMode: mode,\n      gameSelected: true,\n      boardState: new Array(7).fill(new Array(6).fill(null)),\n    });\n  }\n\n  makeMove(slatID) {\n    console.log(slatID);\n    const boardCopy = this.state.boardState.map(function (arr) {\n      return arr.slice();\n    });\n    if (boardCopy[slatID].indexOf(null) !== -1) {\n      let newSlat = boardCopy[slatID].reverse();\n      newSlat[newSlat.indexOf(null)] = this.state.playerTurn;\n      newSlat.reverse();\n      this.setState({\n        playerTurn: this.state.playerTurn === 'Red' ? 'Blue' : 'Red',\n        boardState: boardCopy,\n      });\n    }\n  }\n\n  /*Only make moves if winner doesn't exist*/\n  handleClick(slatID) {\n    if (this.state.winner === '') {\n      this.makeMove(slatID);\n    }\n  }\n\n  /*check the winner*/\n  componentDidUpdate() {\n    let winner = checkWinner(this.state.boardState);\n    if (this.state.winner !== winner) {\n      this.setState({ winner: winner });\n    }\n  }\n\n  render() {\n    /*If a winner exists display the name*/\n    let winnerMessageStyle;\n    if (this.state.winner !== '') {\n      winnerMessageStyle = 'winnerMessage appear';\n    } else {\n      winnerMessageStyle = 'winnerMessage';\n    }\n\n    /*Contruct slats allocating column from board*/\n    let slats = [...Array(this.state.boardState.length)].map((x, i) => (\n      <Slat\n        key={i}\n        holes={this.state.boardState[i]}\n        handleClick={() => this.handleClick(i)}\n      ></Slat>\n    ));\n\n    return (\n      <div>\n        {this.state.gameSelected && <div className=\"Board\">{slats}</div>}\n        <div className={winnerMessageStyle}>{this.state.winner}</div>\n        {(!this.state.gameSelected || this.state.winner !== '') && (\n          <div>\n            <button onClick={() => this.selectedGame('human')}>Play</button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <h4>Modifications</h4>\n        </div>\n        <div className=\"Game\">\n          <Board></Board>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}